/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package smf.gui.merc.unid;

import java.util.ArrayList;
import java.util.List;
import javax.swing.Box;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import smf.controller.UnidadesJpaController;
import smf.gui.BaseFrame;
import smf.gui.SmartFactMain;
import smf.util.StringUtil;
import smf.util.datamodels.DefGSVCol;
import smf.util.datamodels.JTableColumn;
import smf.util.datamodels.TableHeadMouseAdapter;
import smf.util.datamodels.UnidadesDataModel;
import smf.util.datamodels.rows.FilaUnidad;

/**
 *
 * @author manuel.japon
 */
public class UnidadesFrame extends BaseFrame {
    
    private UnidadesJpaController unidadesController;
    private UnidadesDataModel unidadesDataModel;
    private List<JTableColumn> columns;
    
    /**
     * Creates new form UnidadesFrame
     */
    public UnidadesFrame() {
        initComponents();        
        unidadesController = new UnidadesJpaController(em);
        
        columns = new ArrayList<>();
        initColumns();
        
        unidadesDataModel = new UnidadesDataModel(columns, unidadesController);
        loadUnidades();
        jTable1.setModel(unidadesDataModel);        
        jTable1.getTableHeader().addMouseListener(new TableHeadMouseAdapter(jTable1, unidadesDataModel));
        
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(!e.getValueIsAdjusting()) {
                    updateStatusDeleteBtn();
                }
            }
        });
    }
    
    
    public void updateStatusDeleteBtn(){
        int[] selectedRows = jTable1.getSelectedRows();
        jButtonDelete.setEnabled( selectedRows.length>0 );
    }
    
    
    public void loadUnidades(){
        unidadesDataModel.loadFromDataBase();
        unidadesDataModel.fireTableDataChanged();
    }
            
    
    public void initColumns(){
        //a.uni_id, a.uni_name, a.uni_simbolo
                
        columns.add(
                new JTableColumn<FilaUnidad>(
                        0, 
                        "ID", 
                        "uni_id", 
                        Integer.class,
                        new DefGSVCol<FilaUnidad>() {
                            public Object getValueAt(FilaUnidad row, int rowIndex) {
                                return row.getUnidId();
                            }
                        }
                )
        );
        
        columns.add(
                new JTableColumn<FilaUnidad>(
                        1, 
                        "Nombre", 
                        "uni_name", 
                        String.class,
                        new DefGSVCol<FilaUnidad>() {
                            public Object getValueAt(FilaUnidad row, int rowIndex) {
                                return row.getUnidName();
                            }
                        }
                )
        );
        
        columns.add(
                new JTableColumn<FilaUnidad>(
                        2, 
                        "Simbolo", 
                        "uni_simbolo", 
                        String.class,
                        new DefGSVCol<FilaUnidad>() {
                            public Object getValueAt(FilaUnidad row, int rowIndex) {
                                return row.getUnidSymbol();
                            }
                        }
                )
        );
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButtonCrear = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel1.setText("UNIDADES");
        jPanel2.add(jLabel1);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel3.setLayout(new java.awt.GridLayout(6, 1));

        jButtonCrear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smf/gui/icons/Plus_25px.png"))); // NOI18N
        jButtonCrear.setText("Crear");
        jButtonCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonCrear);

        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smf/gui/icons/icons8-trash.png"))); // NOI18N
        jButtonDelete.setText("Borrar");
        jButtonDelete.setEnabled(false);
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonDelete);

        jButtonClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smf/gui/icons/icons8-close_pane_filled.png"))); // NOI18N
        jButtonClose.setText("Cerrar");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonClose);

        getContentPane().add(jPanel3, java.awt.BorderLayout.EAST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButtonCloseActionPerformed

    private void jButtonCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearActionPerformed
        try{
            JTextField nombreField = new JTextField(10);
            JTextField abrField = new JTextField(5);
            JPanel myPanel = new JPanel();
            myPanel.add(new JLabel("Nombre:"));
            myPanel.add(nombreField);
            myPanel.add(Box.createHorizontalStrut(15)); // a spacer
            myPanel.add(new JLabel("Símbolo:"));
            myPanel.add(abrField);

            int result = JOptionPane.showConfirmDialog(
                    null, 
                    myPanel,
                    "Ingrese el nombre y el símblo de la unidad", 
                    JOptionPane.OK_CANCEL_OPTION
            );
            if (result == JOptionPane.OK_OPTION) {
                String nombre = nombreField.getText();
                String abrev = abrField.getText();
                
                if (StringUtil.isEmpty(nombre) || StringUtil.isEmpty(abrev) ){
                    showMsg("Debe ingresar el nombre y la abreviatura de la unidad");
                    return;
                }
                
                unidadesController.crear(new FilaUnidad(0, nombre, abrev));
                loadUnidades();
                SmartFactMain.showSystemTrayMsg(" Registrado satisfactoriamente ");
            }
        }
        catch(Throwable ex){
            showMsgError(ex);
        }
        
    }//GEN-LAST:event_jButtonCrearActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        int[] rows = jTable1.getSelectedRows();
        try{
            if (showConfirmMsg("¿Segur@ que desea borrar estos registros?")){
                for(int i=0;i<rows.length;i++){
                    FilaUnidad row = unidadesDataModel.getValueAt(rows[i]);
                    unidadesController.destroy(row.getUnidId());
                }
                SmartFactMain.showSystemTrayMsg("Registros Borrados");
                loadUnidades();
            }
        }
        catch(Throwable ex){
            showMsgError(ex);
        }
        
    }//GEN-LAST:event_jButtonDeleteActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonCrear;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
