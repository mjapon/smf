/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package smf.gui.merc;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import smf.controller.CatCajasJpaController;
import smf.controller.CategoriasJpaController;
import smf.entity.Catcajas;
import smf.gui.BaseFrame;
import smf.util.CajaComboBoxCellEditor;
import smf.util.CajaComboBoxRenderer;
import smf.util.datamodels.CatsDM;
import smf.util.datamodels.rows.FilaCategoria;

/**
 *
 * @author manuel.japon
 */
public class CategoriaFrame extends BaseFrame {
    
    private CatsDM datamodel;
    private CatCajasJpaController catCajasCntrl;
    private CategoriasJpaController catsCntrl;    
    
    /**
     * Creates new form CategoriaFrame
     */
    public CategoriaFrame() {
        initComponents();
        
        catCajasCntrl = new CatCajasJpaController(em);
        catsCntrl = new CategoriasJpaController(em);
        datamodel = new CatsDM();
        datamodel.setDbcntrl(catsCntrl);
        
        jTableMain.setModel(datamodel);
        
        List<Catcajas> cajasList = catCajasCntrl.listar();
        
        Map<Integer, Catcajas> mapCatCajas = new HashMap<Integer, Catcajas>();
        for(Catcajas catcajas: cajasList){
            mapCatCajas.put(catcajas.getCcId(), catcajas);
        }
        datamodel.setMapCatCajas(mapCatCajas);
        
        Catcajas[] cajasArray = new Catcajas[cajasList.size()];
        
        int i=0;
        for(Catcajas item: cajasList){
            cajasArray[i] = item; i++;
        }
        
        TableColumn colCaja = jTableMain.getColumnModel().getColumn(CatsDM.COLUMN_CAT_ENUM.CAJA.getCol().getIndex());
        
        colCaja.setCellEditor(new CajaComboBoxCellEditor( cajasArray ));
        colCaja.setCellRenderer(new CajaComboBoxRenderer( cajasArray ));
        
        jTableMain.updateUI();
        datamodel.fireTableDataChanged();
        
        jTableMain.getSelectionModel().addListSelectionListener((e) -> {
            if(!e.getValueIsAdjusting()) {
                enableDisBtns();
            }
        });
        
        jTableMain.getModel().addTableModelListener((e) -> {
            //System.out.println("CategoriaFrame:addTableModelListener event---------->");
        });
        
        jButtonGuardar.setVisible(false);
    }
    
    public void enableDisBtns(){
        boolean enabled = jTableMain.getSelectedRows().length>=0;
        jButtonDelete.setEnabled(enabled);
    }
    
    public void loadItems(){
        try{
            datamodel.loadFromDataBase();
            datamodel.fireTableDataChanged();
            jTableMain.updateUI();
        }
        catch(Throwable ex){
            logError(ex);
            showMsgError(ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMain = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonCrear = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButtonGuardar = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jTableMain.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableMain.setRowHeight(25);
        jScrollPane1.setViewportView(jTableMain);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setText("CATEGORÍAS");
        jPanel2.add(jLabel1, java.awt.BorderLayout.CENTER);

        jButtonCrear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smf/gui/icons/Plus_25px.png"))); // NOI18N
        jButtonCrear.setText("Crear");
        jButtonCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonCrear, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel3.setLayout(new java.awt.GridLayout(4, 1));

        jButtonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smf/gui/icons/icons8-save.png"))); // NOI18N
        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonGuardar);

        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smf/gui/icons/icons8-trash.png"))); // NOI18N
        jButtonDelete.setText("Borrar");
        jButtonDelete.setEnabled(false);
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonDelete);

        jButtonClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smf/gui/icons/icons8-close_pane_filled.png"))); // NOI18N
        jButtonClose.setText("Cerrar");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonClose);

        getContentPane().add(jPanel3, java.awt.BorderLayout.EAST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
          
        

    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButtonCloseActionPerformed

    private void jButtonCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearActionPerformed
        String nombrecat = JOptionPane.showInputDialog(this," Ingrese el nombre de la categoría ");
        try{
            if (nombrecat != null){
                if (nombrecat.trim().length()>0){
                    catsCntrl.crear(nombrecat.trim().toUpperCase());
                    loadItems();
                }
                else{
                    showMsg("Nombre incorrecto");
                }
            }
        }
        catch(Throwable ex){
            showMsgError(ex);
        }        
    }//GEN-LAST:event_jButtonCrearActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        
        showDeleteCat();
        
    }//GEN-LAST:event_jButtonDeleteActionPerformed
    
    public void showDeleteCat(){
        try{
            int[] rows = jTableMain.getSelectedRows();
            if (rows.length>0){
                int resp = JOptionPane.showConfirmDialog(null, "¿Seguro que desea borrar esta(as) categoría(s)?");
                if (resp == JOptionPane.YES_OPTION){
                    for (int row: rows){
                        FilaCategoria fila = datamodel.getValueAt(row);
                        if (fila!=null){
                            if (fila.getCodigo()==-1){
                                JOptionPane.showMessageDialog(null, "Esta categoría NO PUEDE SER BORRADA");
                            }
                            else{
                                catsCntrl.borrar(fila.getCodigo());
                            }
                        }
                    }
                    showMsg("Borrado correctamente");
                    loadItems();
                }
            }
        }
        catch(Throwable ex){
            showMsgError(ex);
        }
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonCrear;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMain;
    // End of variables declaration//GEN-END:variables
}
